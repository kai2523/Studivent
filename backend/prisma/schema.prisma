generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  tickets   Ticket[]

  @@map("users")
}

model Event {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt      @map("updated_at")
  title        String
  description  String
  date         DateTime
  contact      String
  imageUrl     String?  @map("image_url")
  banner       String?  @db.Uuid
  totalTickets Int      @map("total_tickets")
  locationId   Int      @map("location_id")
  location     Location @relation(fields: [locationId], references: [id])
  tickets      Ticket[]

  @@map("events")
}

model Ticket {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  ownerEmail  String    @map("owner_email")
  bookedAt    DateTime  @default(now()) @map("booked_at")
  qrCodePath  String?   @map("qr_code_path")
  pdfPath     String?   @map("pdf_path")
  eventId     Int       @map("event_id")
  userId      Int?      @map("user_id")
  code        String    @unique @default(uuid())
  validatedAt DateTime? @map("validated_at")
  event       Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user        User?     @relation(fields: [userId], references: [id])

  @@index([eventId])
  @@index([userId])
  @@map("tickets")
}

model Location {
  id        Int     @id @default(autoincrement())
  name      String
  address   String
  city      String
  country   String
  latitude  Float?
  longitude Float?
  events    Event[]
  
  @@unique([name, address, city, country])
  @@map("locations")
}

generator erd {
  provider = "prisma-erd-generator"
  output = "../ERD.svg"
  disabled = true
  theme = "neutral"
}