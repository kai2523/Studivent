#!/bin/bash
set -euo pipefail

echo "Starte install_dependencies Skript..."
echo "Aktuelles Verzeichnis: $(pwd)"

# 1) Web-Root anlegen und Besitzrechte setzen (rekursiv)
sudo mkdir -p /var/www/html
sudo chown -R ubuntu:ubuntu /var/www/html
cd /var/www/html

# Optional: Alte Dateien entfernen
# sudo rm -rf /var/www/html/*

# 2) Node.js ≥20 installieren (non-interactive)
export DEBIAN_FRONTEND=noninteractive
curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
sudo apt-get update
sudo apt-get install -y nodejs

# 3) Yarn installieren (deb-basierte Variante)
if ! command -v yarn &> /dev/null; then
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian stable main" \
    | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt-get update
  sudo apt-get install -y yarn
fi

# ────────────── BACKEND ─────────────────────────

cd /var/www/html/backend

echo "→ Backend: Aufräumen"
rm -rf node_modules
sudo chown -R ubuntu:ubuntu .

echo "→ Backend: Dependencies installieren & bauen"
yarn install --silent
yarn build
yarn install --production --silent

mkdir -p logs
echo "→ Backend fertig."

# ────────────── FRONTEND ────────────────────────

cd /var/www/html/frontend

echo "→ Frontend: Aufräumen"
rm -rf node_modules
sudo chown -R ubuntu:ubuntu .

echo "→ Frontend: Dependencies installieren"
if [ -f package-lock.json ]; then
  npm ci --silent
else
  npm install --silent
fi

echo "→ Frontend: Production-Build"
npx ng build --configuration production

echo "→ Frontend: Ausliefern"
rm -rf /var/www/html/dist
mkdir -p /var/www/html/dist
cp -R dist/studivent/* /var/www/html/dist
sudo chown -R ubuntu:ubuntu /var/www/html/dist

echo "install_dependencies abgeschlossen!"
